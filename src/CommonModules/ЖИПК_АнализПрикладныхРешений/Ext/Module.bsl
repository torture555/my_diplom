
#Область ПрограммныйИнтерфейс

// Процедура выполняется при запуске сеанса, производит анализ
// и изменяет состояния ключей аналитики прикладных решений
//
//
Процедура ОбновитьСостоянияКлючейАналитики() Экспорт

    УстановитьПривилегированныйРежим(Истина);
	
	СопоставитьРасширенияКонфигурации();
	СопоставитьДополнительныеОбработкиИОтчеты();
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры // ОбновитьСостоянияКлючейАналитики()

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура СопоставитьРасширенияКонфигурации()
	
	ТипПрикладногоРешения = Перечисления.ЖИПК_ТипыПрикладныхРешений.РасширениеКонфигурации;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаКлючиАналитикиПрикладныхРешений();
	Запрос.УстановитьПараметр("ТипПрикладногоРешения", ТипПрикладногоРешения);
	КлючиАналитики = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Расширение Из РасширенияКонфигурации.Получить() Цикл
		
		ГУИД = Строка(Расширение.УникальныйИдентификатор);
		
		КлючАналитики = КлючиАналитики.Найти(ГУИД, "ИдентификаторРешения");
		
		Если КлючАналитики = Неопределено Тогда                              
			
			ДанныеРасширения = Новый Структура;
			ДанныеРасширения.Вставить("Наименование", Расширение.Имя);
			ДанныеРасширения.Вставить("ИдентификаторРешения", ГУИД);
			ДанныеРасширения.Вставить("ТипПрикладногоРешения", ТипПрикладногоРешения);
			ДанныеРасширения.Вставить("Отсутствует", Ложь);
			
			ЖИПК_АнализПрикладныхРешенийСлужебный.ДобавитьНовыйКлючАналитики(ДанныеРасширения);	
			
		Иначе
			
			ЖИПК_АнализПрикладныхРешенийСлужебный.СнятьОтметкуОтсутствияРешения(КлючАналитики.КлючАналитики);
			КлючиАналитики.Удалить(КлючАналитики);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого КлючАналитики Из КлючиАналитики Цикл
		
		ЖИПК_АнализПрикладныхРешенийСлужебный.ПометитьОтсутствиеРешения(КлючАналитики.КлючАналитики);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СопоставитьДополнительныеОбработкиИОтчеты()
	
	Если Не ДополнительныеОтчетыИОбработки.ИспользуютсяДополнительныеОтчетыИОбработки() Тогда
		Возврат;
	КонецЕсли;

	ТипПрикладногоРешения = Перечисления.ЖИПК_ТипыПрикладныхРешений.ДополнительныеОтчетыОбработки;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДополнительныеОтчетыИОбработки();
	Дополнительные = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаКлючиАналитикиПрикладныхРешений();
	Запрос.УстановитьПараметр("ТипПрикладногоРешения", ТипПрикладногоРешения);
	КлючиАналитики = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Обработка Из Дополнительные Цикл
		
		ГУИД = Строка(Обработка.Ссылка.УникальныйИдентификатор());
		
		КлючАналитики = КлючиАналитики.Найти(ГУИД, "ИдентификаторРешения");
		
		Если КлючАналитики = Неопределено Тогда                              
			
			ДанныеДобавления = Новый Структура;
			ДанныеДобавления.Вставить("Наименование", Обработка.Наименование);
			ДанныеДобавления.Вставить("ИдентификаторРешения", ГУИД);
			ДанныеДобавления.Вставить("ТипПрикладногоРешения", ТипПрикладногоРешения);
			ДанныеДобавления.Вставить("Отсутствует", Ложь);
			
			ЖИПК_АнализПрикладныхРешенийСлужебный.ДобавитьНовыйКлючАналитики(ДанныеДобавления);	
			
		Иначе
			
			ЖИПК_АнализПрикладныхРешенийСлужебный.СнятьОтметкуОтсутствияРешения(КлючАналитики.КлючАналитики);
			КлючиАналитики.Удалить(КлючАналитики);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого КлючАналитики Из КлючиАналитики Цикл
		
		ЖИПК_АнализПрикладныхРешенийСлужебный.ПометитьОтсутствиеРешения(КлючАналитики.КлючАналитики);
		
	КонецЦикла;
	
КонецПроцедуры

#Область ТекстыЗапросов

функция ТекстЗапросаКлючиАналитикиПрикладныхРешений()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ЖИПК_КлючиАналитикиПрикладныхРешений.Ссылка КАК КлючАналитики,
	               |	ЖИПК_КлючиАналитикиПрикладныхРешений.Наименование КАК Наименование,
	               |	ЖИПК_КлючиАналитикиПрикладныхРешений.ИдентификаторРешения КАК ИдентификаторРешения
	               |ИЗ
	               |	Справочник.ЖИПК_КлючиАналитикиПрикладныхРешений КАК ЖИПК_КлючиАналитикиПрикладныхРешений
	               |ГДЕ
	               |	ЖИПК_КлючиАналитикиПрикладныхРешений.ТипПрикладногоРешения = &ТипПрикладногоРешения";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДополнительныеОтчетыИОбработки() Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ
	               |	ДополнительныеОтчетыИОбработки.Ссылка КАК Ссылка,
	               |	ДополнительныеОтчетыИОбработки.ХранилищеОбработки КАК ХранилищеОбработки,
	               |	ДополнительныеОтчетыИОбработки.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОтчетыИОбработки";
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти
